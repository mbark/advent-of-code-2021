package main

import (
	"fmt"
	"github.com/mbark/advent-of-code-2021/util"
	"strconv"
	"strings"
)

var in = `forward 8
down 9
up 1
forward 2
down 6
forward 6
down 5
down 4
down 2
forward 3
forward 8
down 6
up 3
up 3
down 5
up 8
forward 8
up 6
forward 4
down 8
up 2
up 6
forward 7
up 6
down 6
down 1
forward 8
up 7
forward 9
forward 5
forward 8
forward 5
down 3
forward 5
up 1
forward 6
forward 3
forward 3
down 2
forward 4
down 3
forward 6
forward 2
forward 1
down 2
forward 1
down 1
up 8
down 4
forward 3
up 3
down 5
down 2
forward 7
forward 1
down 9
up 1
down 1
forward 2
forward 1
forward 1
forward 7
up 5
forward 2
down 6
down 7
down 3
down 1
forward 4
forward 5
down 3
forward 4
down 5
forward 3
forward 4
forward 2
up 8
down 7
up 3
forward 2
down 5
forward 9
forward 5
up 1
down 5
down 6
forward 2
forward 5
down 6
down 1
up 8
up 9
down 7
down 5
forward 2
forward 7
forward 7
up 6
down 4
up 6
forward 2
down 4
down 3
down 4
forward 2
down 2
down 1
down 4
up 4
forward 7
forward 6
forward 2
forward 5
forward 1
forward 7
forward 2
down 3
forward 7
forward 2
up 4
up 5
down 1
down 2
down 3
down 7
up 8
forward 4
down 5
down 4
forward 3
down 6
forward 5
up 5
forward 6
down 1
down 7
forward 1
forward 6
up 9
forward 2
down 1
forward 5
forward 2
forward 6
forward 8
forward 6
down 8
forward 3
down 9
up 8
forward 9
down 7
down 6
down 1
up 5
down 6
forward 7
up 9
forward 8
forward 3
forward 3
forward 2
down 6
up 1
up 5
forward 7
down 2
down 5
down 1
down 4
forward 8
forward 2
forward 8
up 5
forward 7
up 7
forward 6
forward 9
up 1
down 4
forward 8
forward 4
down 9
up 6
down 8
up 9
down 2
down 2
down 9
up 3
down 7
down 2
up 9
forward 9
down 5
forward 2
forward 1
forward 2
down 4
forward 4
down 2
forward 8
up 3
forward 6
up 7
up 9
forward 4
up 9
down 5
forward 5
up 6
down 2
down 4
forward 1
down 2
forward 3
down 7
down 1
down 5
forward 5
up 5
forward 3
down 5
forward 7
down 3
down 2
up 9
down 4
forward 4
down 4
forward 1
up 9
down 8
forward 2
down 7
forward 8
down 5
up 2
down 9
down 2
up 4
up 2
forward 8
forward 3
forward 4
down 1
down 3
forward 3
down 8
forward 7
down 7
forward 5
forward 5
up 3
down 6
forward 1
down 4
forward 2
down 4
up 2
down 3
forward 4
forward 6
up 7
down 3
forward 7
forward 1
down 1
up 3
down 7
up 3
up 8
up 7
up 7
forward 7
down 2
forward 6
forward 7
up 3
down 3
up 9
down 6
down 7
down 7
up 5
forward 6
forward 2
up 9
forward 2
down 3
down 3
forward 5
forward 3
forward 6
forward 6
down 7
forward 2
down 3
up 4
forward 1
forward 5
down 5
up 1
down 9
forward 3
up 6
forward 5
down 4
forward 9
up 5
forward 7
up 7
forward 9
forward 2
forward 6
forward 3
forward 3
up 7
down 1
down 1
forward 1
down 8
down 2
forward 4
up 7
forward 7
down 5
down 7
up 6
down 4
forward 4
forward 4
up 7
down 9
forward 6
forward 1
down 7
forward 5
forward 2
forward 1
up 7
down 9
forward 2
down 7
up 8
forward 1
forward 4
up 4
forward 1
down 9
down 5
down 8
forward 8
forward 8
down 8
down 3
down 5
down 6
up 9
forward 1
down 1
forward 1
forward 1
down 6
forward 3
down 1
forward 9
forward 3
up 7
down 9
forward 5
down 4
up 9
down 2
down 5
down 6
forward 1
up 2
forward 9
up 7
forward 2
forward 8
down 5
down 6
down 8
forward 4
down 4
forward 9
forward 3
forward 6
forward 9
up 2
down 8
up 2
up 6
up 5
down 5
down 7
forward 1
up 6
forward 9
up 4
forward 4
up 2
forward 3
down 8
down 1
up 5
forward 5
down 3
down 4
down 1
forward 3
up 2
forward 3
down 1
forward 8
up 3
forward 4
down 3
forward 6
down 9
down 7
forward 3
forward 5
forward 1
forward 3
up 8
forward 2
forward 2
forward 7
up 9
forward 4
down 1
down 6
forward 8
forward 5
up 4
up 5
up 9
forward 9
up 8
down 3
up 5
forward 1
forward 5
up 9
forward 8
forward 4
forward 3
forward 1
forward 6
down 2
up 8
down 7
down 1
down 5
up 1
forward 9
down 2
down 4
forward 3
forward 1
down 7
up 9
up 7
down 2
down 4
down 1
forward 9
up 4
down 9
down 9
down 4
down 9
forward 1
down 2
forward 8
up 4
up 3
forward 4
down 5
forward 8
forward 2
forward 4
up 3
up 2
up 3
forward 4
forward 4
forward 6
down 7
down 8
up 3
down 9
down 5
up 7
up 1
down 3
down 4
up 5
up 9
down 2
up 8
forward 9
down 3
forward 4
down 5
down 1
forward 9
forward 2
up 3
down 9
down 8
up 7
forward 2
down 9
up 8
up 2
down 3
forward 3
forward 3
forward 3
forward 4
down 7
up 2
forward 3
forward 7
forward 5
forward 7
down 6
down 9
down 6
down 8
up 4
down 4
down 2
up 1
down 3
forward 7
forward 5
down 7
forward 1
up 7
forward 9
down 8
down 1
down 3
down 1
up 8
forward 7
up 5
forward 6
down 1
down 8
up 1
up 9
forward 7
down 9
forward 3
forward 8
forward 7
down 3
down 5
up 3
up 7
up 3
up 6
up 8
down 3
forward 7
down 7
forward 9
up 9
down 1
down 3
down 8
down 6
forward 1
up 6
down 1
up 4
down 2
forward 9
up 8
up 2
down 6
down 1
forward 2
forward 6
forward 1
forward 2
up 6
down 7
down 8
forward 9
up 2
down 6
down 8
down 5
up 6
forward 6
down 5
forward 4
forward 2
down 1
down 4
up 5
down 5
down 1
down 9
down 1
down 1
forward 1
forward 5
up 4
down 5
down 3
down 2
down 7
forward 5
forward 6
forward 2
up 9
up 3
forward 6
down 4
forward 8
forward 4
forward 9
down 6
down 9
down 1
forward 6
down 8
down 7
forward 5
down 4
forward 5
forward 5
up 3
down 1
down 4
forward 1
forward 7
down 5
down 4
forward 7
forward 3
forward 4
down 4
forward 8
up 2
up 6
down 9
up 1
down 8
up 2
up 6
forward 5
forward 7
up 4
down 4
down 8
forward 5
up 4
down 6
forward 9
up 4
forward 7
up 7
down 3
down 2
down 2
down 6
down 4
forward 4
down 3
down 4
down 4
down 8
up 2
down 3
forward 5
forward 5
up 5
forward 1
down 7
forward 5
forward 7
forward 9
forward 4
down 1
down 1
up 5
down 6
down 8
down 9
down 9
forward 7
down 6
forward 3
down 7
up 3
forward 5
forward 5
up 6
down 5
down 8
down 5
down 1
down 7
forward 8
up 9
forward 2
up 1
down 9
down 2
forward 7
up 1
down 5
forward 3
up 6
forward 9
up 9
down 3
forward 2
up 6
down 6
up 8
down 3
up 5
forward 9
up 3
forward 4
forward 6
down 3
forward 4
down 5
down 7
down 7
forward 9
forward 6
down 9
up 1
forward 2
down 8
down 7
up 7
forward 6
up 5
down 6
forward 6
down 3
forward 2
down 7
forward 2
down 3
down 8
forward 4
up 8
forward 7
down 4
forward 3
down 3
forward 6
down 7
down 7
forward 8
forward 9
down 8
down 4
forward 5
down 1
forward 9
down 7
up 3
down 6
down 4
down 9
forward 3
down 1
forward 1
down 5
forward 1
forward 9
down 9
forward 5
down 1
up 9
down 3
down 2
up 6
forward 4
down 6
down 2
forward 5
up 8
down 7
up 6
down 1
forward 3
forward 4
down 9
down 2
forward 5
forward 8
up 2
forward 9
up 5
down 1
forward 1
forward 6
forward 9
forward 2
down 8
forward 1
up 8
forward 1
forward 8
up 5
forward 3
down 4
up 8
down 6
up 1
forward 2
forward 4
up 6
forward 1
forward 4
up 6
down 8
up 7
forward 5
up 7
down 9
down 2
up 5
forward 2
down 7
forward 1
forward 1
forward 3
down 6
forward 7
up 2
up 1
forward 1
up 5
down 1
forward 7
up 9
forward 7
down 6
up 4
down 5
up 2
down 4
up 3
down 6
down 7
down 7
up 1
forward 4
forward 1
up 2
down 7
down 5
forward 7
forward 5
forward 2
down 4
down 6
down 8
forward 9
forward 8
up 9
forward 6
down 6
down 6
down 8
up 5
forward 6
down 6
forward 5
down 4
down 6
down 2
up 3
forward 1
forward 8
down 2
forward 9
forward 7
forward 8
forward 1
down 8
forward 1
down 1
forward 6
forward 4
forward 5
up 9
up 1
down 7
up 8
down 5
down 2
forward 9
up 2
forward 6
down 7
down 7
down 2
down 6
down 7
forward 9
up 2
down 6
forward 8
forward 1
down 3
down 2
forward 3
forward 7
down 3
down 1
down 4
down 9
forward 1
down 6
down 8
down 4
down 5
down 5
up 9
forward 7
down 9
up 3
up 5
up 1
forward 2
forward 9
down 3
forward 1
up 3
forward 6
up 2
forward 7
forward 5
forward 8
forward 7
forward 8
down 5
up 3
forward 5
forward 8
forward 1
forward 5
forward 7
forward 2
down 6
down 6
down 6
down 2
down 2
up 1
down 1
forward 5
forward 7
down 4
forward 4
up 1
forward 7
forward 8
down 5
down 2
down 2
down 5
forward 3
forward 7
down 5
forward 2
forward 8
down 3
forward 6
up 1
forward 7
forward 4
forward 1
forward 9
forward 2
down 1
down 1
down 8
forward 4
down 6
forward 7
forward 2
`

var testData = `
forward 5
down 5
forward 8
up 3
down 8
forward 2
`

type Command struct {
	direction string
	much      int
}

func main() {
	var commands []Command
	for _, l := range util.ReadInput(in, "\n") {
		split := strings.Split(l, " ")
		i, _ := strconv.Atoi(split[1])
		commands = append(commands, Command{
			direction: split[0],
			much:      i,
		})
	}

	fmt.Printf("first: %d\n", first(commands))
	fmt.Printf("second: %d\n", second(commands))
}

func first(commands []Command) int {
	var horizontal, depth int
	for _, c := range commands {
		switch c.direction {
		case "forward":
			horizontal += c.much
		case "down":
			depth += c.much
		case "up":
			depth -= c.much
		}
	}

	return horizontal * depth
}

func second(commands []Command) int {
	var horizontal, depth, aim int
	for _, c := range commands {
		switch c.direction {
		case "forward":
			horizontal += c.much
			depth += c.much * aim
		case "down":
			aim += c.much
		case "up":
			aim -= c.much
		}
	}

	return horizontal * depth
}
